<div class="container">
    <div class="starter-template">
<div class="alert alert-info alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <div class="row">
        <div class="col-xs-8">
            <p>Now you're ready to load your data into Neo4j! View the Cypher scripts to import your data below or you can connect directly to an existing Neo4j instance.</p>
        </div>
        <div class="col-xs-4">
            <button class="btn btn-success" id="guideButton">Guide Me!</button>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-xs-8">
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#loadcsv" aria-controls="loadcsv" role="tab" data-toggle="tab">LOAD CSV Cypher</a></li>
            <li role="presentation"><a href="#connect" aria-controls="connect" role="tab" data-toggle="tab">Connect to Existing Neo4j Instance</a></li>
            {{# if cypher }}
                <li role="presentation"><a href="#cypher" aria-controls="cypher" role="tab" data-toggle="tab">Single Statement Cypher</a></li>
            {{/if}}

        </ul>
    </div>
    <div class="col-xs-4">
        <button id="purgeButton" class="btn btn-danger" data-intro="To immediately remove your data from our server, click this button. Regardless, you data will be purged in one hour." data-step="4">Purge my data now</button>
    </div>
</div>
<div class="row">


    <div class="tab-content">

        <div role="tabpanel" class="tab-pane" id="connect" data-intro="To run the import Cypher script, enter the URL for your running instance of Neo4j. If you have authentication enabled, you must specify a username and password." data-step="2">
            <h2 class="text-left">Connect to Neo4j <small>Import to an existing Neo4j instance</small></h2>

            <form class="form-horizontal">
                <div class="form-group">
                    <label for="inputNeo4jURL" class="col-sm-2 control-label">Neo4j URL</label>
                    <div class="col-sm-6">
                        <input type="text" class="form-control" id="inputNeo4jURL" placeholder="http://localhost:7474" value="http://localhost:7474" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputNeo4jUser" class="col-sm-2 control-label">Neo4j Username</label>
                    <div class="col-sm-6">
                        <input type="text" class="form-control" id="inputNeo4jUser" placeholder="(Optional)">
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputNeo4jPassword" class="col-sm-2 control-label">Neo4j Password</label>
                    <div class="col-sm-6">
                        <input type="password" class="form-control" id="inputNeo4jPassword" placeholder="(Optional)">
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <button type="submit" class="btn btn-default" id="importButton">Import</button>
                    </div>
                </div>
            </form>

            <div class="col-sm-6">
                <textarea class="form-control" id="statusTextArea" rows="10" data-intro="As the import script is running you can monitor the progress here. If there are any errors generated by the script execution they will be shown here." data-step="3" disabled>Status...</textarea>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane active" id="loadcsv">
            <h2 class="text-left">Cypher <small>Run this Cypher in a Neo4j instance to import your data.</small></h2>
            <p class="text-left">You can run these statements individually in the Neo4j Browser (each statement is terminated by a semicolon) or run all statements together using neo4j-shell: <code>bin/neo4j-shell -file import.cypher</code></p>
            <p class="text-right"><a href="#download">Download</a> | <button class="btn btn-default btn-xs copyBtn" data-clipboard-target="#loadCSVCypherText">Copy</button></p>
            <textarea data-intro="This Cypher script can be used to import your data as configured. This script is using Cypher's LOAD CSV functionality to efficiently import your data into a Neo4j instance. You can run it from this web application by specifying the URL and (optionally) authentication credentials for you running Neo4j instance." data-step="1" class="form-control" id="loadCSVCypherText" rows="25" readonly>
// Add constraints and indexes
{{cypherConstraints}}

// LOAD CSV Cypher
{{loadCSVCypher}}
            </textarea>
        </div>

        {{# if cypher}}
        <div role="tabpanel" class="tab-pane" id="cypher">
            <h2 class="text-left">Single statement Cypher <small>Run this in the Neo4j browser!</small></h2>
            <p class="text-right"><a href="#download">Download</a> | <button class="btn btn-default btn-xs copyBtn" data-clipboard-target="#cypherText">Copy</button></p>
            <textarea class="form-control" id="cypherText" rows="25" readonly>{{cypher}}</textarea>
        </div>
        {{/if}}
    </div>


</div>

<div class="modal fade" id="confirmModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Are you sure?</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete all data uploaded to the server?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" id="confirmButton" class="btn btn-danger">Delete my data</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="purgeModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Data purged</h4>
            </div>
            <div class="modal-body">
                <p>Your data has been removed. Thanks for importing your data. If you have any feedback please email <a href="mailto:william.lyon@neotechnology.com">william.lyon@neotechnology.com</a></p>
            </div>
            <div class="modal-footer">
                <button type="button" id="doneButton" class="btn btn-primary">OK</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>
    $(function(){

        var clipboard = new Clipboard('.copyBtn');

        clipboard.on('success', function(e) {
            e.clearSelection();
        });


        var loadCSVCypher = {{{ stringify this.loadCSVCypher}}},
            cypherConstraints = {{{ stringify this.cypherConstraints}}}
        $('#importButton').click(function(e) {
            e.preventDefault();


            var neo4jURL = $('#inputNeo4jURL').val(),
                neo4jUser = $('#inputNeo4jUser').val(),
                neo4jPassword = $('#inputNeo4jPassword').val();
            $('#statusTextArea').val("Running query...");

            if (neo4jURL === '') {
                alert("You must specify a valid URL for an existing Neo4j instance.");
                return false;
            }

            var neo4jConn = {
                "neo4jURL": neo4jURL,
                "neo4jUser": neo4jUser,
                "neo4jPassword": neo4jPassword
            };

            var statements = [],
                constraintStatements = [];

            var cypherArr = loadCSVCypher.split(";"),
                constraintArr = cypherConstraints.split(";");
            console.log(cypherArr);

            // TODO: extract into func to avoid duplication
            _.forEach(cypherArr, function(cypher) {
                var obj = {};
                obj['statement'] = cypher;
                obj['parameters'] = {};
                obj['includeStats'] = true;
                obj['resultDataContents'] = ["row", "graph"];
                if (cypher.length > 3) {
                    statements.push(obj);
                }
            });

            _.forEach(constraintArr, function(cypher) {
                var obj = {};
                obj['statement'] = cypher;
                obj['parameters'] = {};
                obj['includeStats'] = true;
                obj['resultDataContents'] = ["row", "graph"];
                if (cypher.length > 3) {
                    constraintStatements.push(obj);
                }
            });

            var url = neo4jURL.replace(/\/db\/data.*/,"") + "/db/data/transaction/commit";
            function authHeader() {
                if (neo4jUser && neo4jPassword) {
                    return {"Authorization": "Basic " + btoa(neo4jUser + ":" + neo4jPassword)};
                } else {
                    return {};
                }
            }

            console.log(statements);

            // FIXME: extract logic here
            $.ajax({
                type: 'POST',
                data: JSON.stringify({
                    statements: constraintStatements
                }),
                contentType: 'application/json',
                url: url,
                error: function(xhr, statusText, errorThrown){
                    $('#statusTextArea').val(xhr.responseText || "Request failed, check authorization settings.");
                },
                headers: authHeader(),
                success: function(data) {
                    console.log(data);
                    $('#statusTextArea').val($('#statusTextArea').val() + JSON.stringify(data, null, 4));
                    $.ajax({
                        type: 'POST',
                        data: JSON.stringify({
                            statements: statements
                        }),
                        contentType: 'application/json',
                        url: url,
                        error: function(xhr, statusText, errorThrown){
                            $('#statusTextArea').val(xhr.responseText || "Request failed, check authorization settings.");
                        },
                        headers: authHeader(),
                        success: function(data) {
                            console.log(data);
                            // FIXME: multiple jquery selections
                            $('#statusTextArea').val($('#statusTextArea').val() + JSON.stringify(data, null, 4));
                            $('#statusTextArea').val($('#statusTextArea').val() + "\nALL DONE!");
                        }
                    });
                }
            });

        });
        // event handler for import button
        // ajax call to trigger connection to Neo4j and begin import

        $('#purgeButton').click(function(e){
            e.preventDefault();
            $('#confirmModal').modal('show');
        });

        $('#confirmButton').click(function(e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: "/purge",
                success: function(d) {
                    $('#purgeModal').modal('show');
                },
                error: function(xhr, statusText, errorThrown) {
                    console.log(xhr.responseText);
                }
            })
        });

        $('#doneButton').click(function(e){
            e.preventDefault();
            window.location.href="/";
        });

        $('#guideButton').click(function(e) {
            e.preventDefault();

            var intro = introJs();
            intro.onbeforechange(function(target) {
                // Properly handle cases where the element is in a bootstrap tab
                if($(target).data("toggle") == "tab") {
                    $(target).trigger("click");
                }

                var tab = $(target).closest('.tab-pane');
                var id = tab.prop("id");
                if(id) {
                    $('a[href="#' + id + '"]').trigger("click");
                }

                // TODO: update buttons when we are at the last intro for Nodes only

            });
            intro.start();
        })
    });
</script>

<script src="/js/clipboard.min.js"></script>
        </div></div>