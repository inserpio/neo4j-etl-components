<script src="js/papaparse.min.js"></script>
<link rel="stylesheet" href="stylesheets/spinner.css" type="text/css">

<div class="jumbotron">
    <div class="container">
        <h1>Neo4j ETL</h1><img style="float: right;" class="img-responsive img-thumbnail" width="400px" src="img/neo4j.png"/>
        <div class="row">
            <h2>Select your mapping file to get started</h2>
            <p>Select your json file for upload. This tool will parse your RDBMS to GRAPH mapping and guide you through the process of consolidating your property graph data model to import your data into Neo4j in your desired format.</p>
            <div class="row">
               <div class="col-sm-2" id="spinnerDiv"></div>
            </div>
            <input type="file" id="csv-file" name="files"/>
        </div>
        <br/><br/>
        <div class="row">
            Please note, this UI is based on the <a href="https://github.com/neo4j-contrib/neo4j-csv-import-web" target="_blank">neo4j-csv-import</a> project by
            <a href="https://twitter.com/lyonwj" target="_blank" class="navbar-link">William Lyon</a>.
            Big thanks to him for the inspiration and the code we benefit of.
            </p>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <h3>Easily inspect and consolidate your relational to graph database mapping in 3 steps</h3>
        <br/>
        <ol>
            <li>Generate the mapping file via command line
                <ul>
                    <br/>
                    <li><i>./bin/neo4j-etl generate-metadata-mapping
                        --rdbms:url jdbc:postgresql://localhost:5433/northwind?ssl=false \<br/>
                        --rdbms:user neo4j --rdbms:password neo4j
                        &gt; /tmp/northwind/mapping.json</i></li>
                </ul>
            </li>
            <br/>
            <li>Inspect and configure the graph data model with this visual tool</li>
            <br/>
            <li>Save the consolidated mapping file to be used to import your data into Neo4j
                <ul>
                    <br/>
                    <li><i>./bin/neo4j-etl export
                        --rdbms:url jdbc:postgresql://localhost:5433/northwind?ssl=false
                        --rdbms:user neo4j --rdbms:password neo4j \<br/>
                        --using bulk:neo4j-import \
                        --mapping-file &lt;your_download_directory&gt;/mapping-ui.json \<br/>
                        --import-tool $NEO4J_HOME/bin \
                        --destination $NEO4J_HOME/data/databases/graph.db \<br/>
                        --csv-directory /tmp/northwind/ --quote '"' --force</i></li>
                </ul>
            </li>
        </ol>
    </div>
</div>

<div class="modal fade" id="warningModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Privacy note</h4>
            </div>
            <div class="modal-body">
                <p class="text-left"><strong>NOTE: </strong> By choosing continue the files you have just selected will be uploaded to a remote server and will be made available for download over the internet, although using an obfuscated url. If you prefer you can avoid this and run the app locally.</p>
                <p class="text-left">Your files will be stored on the server for a maximum of one hour</p>
                <p class="text-left">After completing the data modeling / import process you will have the option to immediately remove all uploaded data. </p>
                <p class="text-left">By continuing you agree to the <a href="/terms" target="_blank">privacy policy </a> governing this application.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button type="button" id="uploadContinueButton" class="btn btn-primary" data-dismiss="modal">Upload data and continue</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>
    var fileData = {},
        fileNames = [],
        fileEvent;

    function handleFileSelect() {
        var file = fileEvent.target.files[0];

        $('#spinnerDiv').append($('<div class="spinner-loader">Loadingâ€¦</div>'));

        var reader = new FileReader();

        reader.onloadstart = function(event) {
            console.log(file);
        };

        reader.onload = function(event) {
            var obj = JSON.parse(event.target.result);

            //console.log(obj);
            //for (var table = 0; table < obj.length; table++) {
            //  console.log(obj[table]["name"] + " - " + obj[table]["graph-object-type"]);
            //}

            fileData[file.name] = obj;
            fileNames.push(file.name);

            fileData['files'] = fileNames;

            $.ajax({
                type: 'POST',
                data: JSON.stringify(fileData),
                contentType: 'application/json',
                url: '/load',
                success: function(data) {
                    console.log('success');
                    window.location.href = '/load2';
                }
            });
        };

        reader.readAsText(file);

        /*
        $('#csv-file').parse({
            config: {
                header: true,
                dynamicTyping: true,
                skipEmptyLines: true,
                //preview: 100,
                complete: function(results, file) {
                    var data = results;
                    fileData[file.name] = data;
                    fileNames.push(file.name);
                }
            },
            before: function(file, inputElem) {
                console.log(file);
            },
            complete: function() {

                fileData['files'] = fileNames;
                $.ajax({
                    type: 'POST',
                    data: JSON.stringify(fileData),
                    contentType: 'application/json',
                    url: '/load',
                    success: function(data) {
                        console.log('success');
                        //window.location.href = '/load2';
                    }

                });
            }
        });
        */
    }

    $(document).ready(function(){
        $("#csv-file").change(function(e) {
            $('#warningModal').modal('show');
            fileEvent = e;
        });

        $('#uploadContinueButton').click(function(e) {
            e.preventDefault();
            handleFileSelect();

        })
    })
</script></div></div>